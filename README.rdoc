== ReviewFoo Code Review tool

I had a task seeming simple enough: Find a nice way of doing code reviews for our projects that fit in our workflow.
As it turned out: That isn't simple. We're using Mercurial, BitBucket, JIRA and a branch-trinity of "testing" -> "default" -> "prod".
The workflow should be: When something is in testing, the unit tests do not fail and Code Review says "OK", merge it into default (which is eventually merged into prod and deployed)

 1. First was a suggestion that was made to me: Phabricator. But that thing breaks whenever it can, which apparently is "every few hours". Even without touching the installation on the server. To be fair here: That seems to be related with Mercurial.
 2. We had the Atlassian onDemand suite, so I started with looking into Crucible. But the onDemand version does not support Mercurial. Funny, eh?
 3. My final experiment was ReviewBoard for Mercurial. Hahahaha. Python software at its best. Does not work, if it works it does not work correctly. You can't make that stuff up.

So I thought: Screw it, I am going to write my own web-based review tool.

Here it comes.

== Roadmap

 0.1. Release: Import repositories and import commits via rake task
 0.2. Release: What about branching? Let's support branches.
 0.3. Release: View commits, changed files and diffs
 0.4. Release: Comment lines in the diff and accept / reject a commit, send notification emails
 0.5. Release: Add users / owner / repository-based access control
 0.6. Release: Do a merge to somewhere, when commit is accepted
 Then: Get a beer.

== Where are you now?

As this is a "fun" project (sounds a little desperate, doesn't it?) it may take a gazillion years to reach some of the releases.
Plus: This is my Rails learning project. I want it the "hard" way - TDD with RSpec.

 * Aug, 27th: ReviewFoo was born. Let's see, if that is a good or bad thing.
 * Sept, 5th: Release 0.1 is here! Wooohooo! 